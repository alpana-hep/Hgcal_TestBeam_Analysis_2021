#define AnalyzeHGCOctTB_cxx
#include <iostream>
#include <vector>
#include <cstring>
#include "AnalyzeHGCOctTB.h"
#include "Math/SMatrix.h"
#include "Math/SVector.h"
#include <math.h>

using namespace std;



// chip 3022,44,3028




int main(int argc, char* argv[])
{

  if (argc < 6) {
    cerr << "Please give 5 arguments " << "runList " << " " << "outputFileName" << " " << "dataset" <<" " << "configuration" 
	 <<" " << "energy" << endl;
    return -1;
  }
  const char *inputFileList = argv[1];
  const char *outFileName   = argv[2];
  const char *data          = argv[3];
  const char *config          = argv[4];
  const char *energy = argv[5];
  AnalyzeHGCOctTB hgcOctTB(inputFileList, outFileName, data, config, energy);
  cout << "dataset " << data << " " << endl;
  cout << "configuration " << config << " " << endl;
  cout << "energy " << energy << " " << endl;

  hgcOctTB.EventLoop(data);
  return 0;
}

void AnalyzeHGCOctTB::EventLoop(const char *data) {


  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntriesFast();
  Long64_t nentries3 = fChain3->GetEntriesFast();
  Long64_t hgc_jentry = 0;

  cout << "nentries " << nentries << endl;
  cout << "Analyzing dataset " << data << " " << endl;

  Long64_t nbytes = 0, nb = 0;
  Long64_t nbytes2 = 0, nb2 = 0;
  Long64_t nbytes3 = 0, nb3 = 0;

  

  int decade = 0;
  int ahc_zeroHit = 0;



  bool DEBUG = false;
  //  bool DEBUG = true;
  int TOTAL_ACTIVE_LAYER = -1;
  int EE_LAYER = -1;
  int FH_LAYER = -1;
  int AH_LAYER = -1;
  if(!strcmp(conf_,"alpha") || !strcmp(conf_,"config1")) {
    TOTAL_ACTIVE_LAYER = 79;
    EE_LAYER = 28;
    FH_LAYER = 12;
    AH_LAYER = 39;
  }
  else if(!strcmp(conf_,"bravo") || !strcmp(conf_,"config2")){
    TOTAL_ACTIVE_LAYER = 78;
    EE_LAYER = 28;
    FH_LAYER = 11;
    AH_LAYER = 39;
  }
  else if(!strcmp(conf_,"charlie") || !strcmp(conf_,"config3")) {
    TOTAL_ACTIVE_LAYER = 59;
    EE_LAYER = 8;
    FH_LAYER = 12;
    AH_LAYER = 39;
    
  }
  else {
    cout<<"ERROR: Unknown configuration!!!!"<<endl;
    return;
  }





  if(DEBUG) cout<<"DEBUG: Configuration = "<<conf_<<endl;
  if(DEBUG) cout<<"DEBUG: TOTAL_ACTIVE_LAYER = "<<TOTAL_ACTIVE_LAYER<<endl;
  if(DEBUG) cout<<"DEBUG: EE_LAYER = "<<EE_LAYER<<endl;
  if(DEBUG) cout<<"DEBUG: FH_LAYER = "<<FH_LAYER<<endl;
  if(DEBUG) cout<<"DEBUG: AH_LAYER = "<<AH_LAYER<<endl;

  if(DEBUG) cout<<"DEBUG: Entering event Loop"<<endl;

  Long64_t jentry;

  for (jentry=0; jentry<nentries;jentry++,hgc_jentry++)
    {
  //for (jentry=0; jentry<1;jentry++,hgc_jentry++) {
      // ==============print number of events done == == == == == == == =
      double progress = 10.0 * jentry / (1.0 * nentries);
      int k = int (progress);
      if (k > decade)
	cout << 10 * k << " %" << endl;
      decade = k;
    
      // ===============read this entry == == == == == == == == == == ==

      Long64_t ientry = LoadTree(jentry);
      if (ientry < 0) { break; cout<<"Breaking"<<endl;}
      nb = fChain->GetEntry(hgc_jentry);   nbytes += nb;
      nb2 = fChain2->GetEntry(hgc_jentry); nbytes2 += nb2;
      nb3 = fChain3->GetEntry(jentry); nbytes3 += nb3;

    
      // ===============Synch HGCAL & AHCAL with same entry == == == == == == == == == == ==

      while(run != runNumber)
	{
	  if(nentries>nentries3)
	    {
	
	      hgc_jentry++;
	      nb = fChain->GetEntry(hgc_jentry);   nbytes += nb;
	      nb2 = fChain2->GetEntry(hgc_jentry); nbytes2 += nb2;
	      cout<<"hgcal extra event"<<endl;
	    }
	  else if(nentries<nentries3)
	    {
	      jentry++;
	      nb3 = fChain3->GetEntry(jentry); nbytes3 += nb3;
	      cout<<"Ahcal extra event"<<endl;
	    }
	}


      h_beamenergy->Fill(beamEnergy);
      h_particle->Fill(pdgID);



      ////////////////////////////////////////////
      //            HGCAL Part                  //
      ////////////////////////////////////////////
      
      /// Read HGCAL Tree
      total_rechits_energy=0;
      if(DEBUG) cout<<"DEBUG: Start Analylizing HGCAL  RecHits!!"<<endl;
      
      Esum_rechits_EE_nocut=0;
      Esum_rechits_EE_allcut=0;
      Esum_rechits_EE_Nflag=0;
      Esum_rechits_EE_Nchannels=0;
      Esum_rechits_EE_NchannelsLayer1=0;
      Esum_rechits_FH=0;
      Esum_rechits_EE=0;
      Esum_rechits_AH=0;
      count_afterCuts=0;
      count=0;
      count_nflag=0;
      count_nflag0=0;
      count_nchannel=0;
      count_nchanLayer1=0;
      //      Esum_rechits_EE_noiseflag0=0;
      noise_flag=rechit_noise_flag;
      // cout<<noise_flag->size()<<endl;
      // cout<<NRechits<<endl;
      //      cout<<"just before hgcal rechit loop"<<endl;
      for( int i = 0 ; i < NRechits; i++)
	{
	  //cout<<noise_flag->at(i)<<endl;
	  //bool noiseFlag=rechit_noise_flag->at(i);
	  //if(!(*rechit_noise_flag)[i]) continue;
	  //if((*rechit_noise_flag)[i]==false) continue;
	  //if (rechit_noise_flag->at(i) == 0) continue;
	  //if(noise_flag->at(i) == 0) continue;
	  int channel = rechit_channel->at(i);
	  int chip = rechit_chip->at(i);
	  int en_chan = 1000*chip + channel;
	  int layer = rechit_layer->at(i);
	  float energy=rechit_energy->at(i);
	  //  cout<<"check1 at selecting ee layer"<<endl;
	  //	  cout<<rechit_noise_flag->at(i)<<endl;
	  //if (bool flag = rechit_noise_flag->at(i) == true) continue; 
	  if(layer<=28)
	    {
	      count+=1;
	      Esum_rechits_EE_nocut+=energy;
	      //  cout<<"hello dave"<<endl;
	      //if (int(rechit_noise_flag->at(i)) == 1)
	      if(rechit_noise_flag->at(i)==1) // continue;
	      	{
		  //  cout<<"check2 noise flag"<<endl;
	      	  count_nflag0++;
	      	  Esum_rechits_EE_noiseflag0+=energy;
	      	  continue;
	      	}
	      else{
		//cout<<"check3"<<endl;
		count_nflag++;
		Esum_rechits_EE_Nflag+=energy;
		
		if(en_chan == 44 || en_chan == 3028 || en_chan == 3022) continue;
		  
		count_nchannel++;
		Esum_rechits_EE_Nchannels+=energy;
		  
		if(layer == 1 && chip == 0) continue;
		  
		count_nchanLayer1++;
		Esum_rechits_EE_NchannelsLayer1+=energy;
		if(rechit_energy->at(i) < 0.5) continue;
		count_afterCuts++;
		Esum_rechits_EE_allcut+=energy;
	      }
	  // cout<<rechit_noise_flag->at(i)<<"\t"<<channel<<"\t"<<chip<<"\t"<<endl;
	  //count_afterCuts++;
	  // rechits_layer[layer]+=(*rechit_energy)[i];
	  // total_rechits_energy+= rechit_energy->at(i);
	  // if(layer <= 28) {Esum_rechits_EE += rechit_energy->at(i);
	  //   count_afterCuts++;
	    }
       
	  else Esum_rechits_FH += rechit_energy->at(i);

	  h_hgcal_rechits->Fill(rechit_energy->at(i));
	} //Nrechits loop
      h_totalrechits_allcut->Fill(count_afterCuts);
      h_totalrechits_nocut->Fill(count);
      h_totalrechits_Nflag->Fill(count_nflag);
      h_totalrechits_Nchannel->Fill(count_nchannel);
      h_totalrechits_NchannelWlayer1->Fill(count_nchanLayer1);
      
      //cout<<"..."<<endl;
      //cout<<count_afterCuts<<"\t"<<NRechits<<endl;
      //cout<<Esum_rechits_FH <<" "<<Esum_rechits_EE<<endl;
      //      h_EE_vs_FH->Fill(Esum_rechits_EE,Esum_rechits_FH);
      h_SEnergy_Rechits_EE_nocut->Fill(Esum_rechits_EE_nocut);
      h_SEnergy_Rechits_EE_allcut->Fill(Esum_rechits_EE_allcut);
      h_SEnergy_Rechits_EE_Nflag->Fill(Esum_rechits_EE_Nflag);
      h_SEnergy_Rechits_EE_Nchannel->Fill(Esum_rechits_EE_Nchannels);
      h_SEnergy_Rechits_EE_NchannelWlayer1->Fill(Esum_rechits_EE_NchannelsLayer1);
      h_SEnergy_Rechits_EE_noiseflag0->Fill(Esum_rechits_EE_noiseflag0);
      h_totalrechits_noiseflag0->Fill(count_nflag0);
      h_SEnergy_Rechits_FH->Fill(Esum_rechits_FH);
      h_total_rechitsEenrgy->Fill(total_rechits_energy);
      //    Esum_rechits_EE=0;
      
      
      //////////////////////////////////////////
      
      
      //    cout<<NRechits<<"\t"<<count<<endl;
      
      ////////////////////////////////////////////
      //            AHCAL Part                  //
      ////////////////////////////////////////////
      
      /// Read AHCAL Tree
      if(DEBUG) cout<<"DEBUG: Start Analylizing AHCAL  RecHits!!"<<endl;
      // if(ahc_nHits>5)
      //   {
      // 	cout<<ahc_nHits<<" "<<runNumber<<" "<<jentry<<endl;}
      for(int i = 0 ; i < ahc_nHits; i++) {
	if(ahc_hitK->at(i) == 38) continue;
	  //.. Do something with each AHCAL rechit  ..//
	      //	cout<<"..."<<(*rechit_layer)[i]<<endl;
	      //rechits_layer[(*rechit_layer)[i]+40]+=(*rechit_energy)[i];
	      Esum_rechits_AH+=(*ahc_hitEnergy)[i];
	      h_ahcal_rechits->Fill((*ahc_hitEnergy)[i]);
	    
      }
      //cout<<Esum_rechits_AH<<endl;
      h_SEnergy_Rechits_AH->Fill(Esum_rechits_AH);

      //h_EE_vs_AH->Fill(Esum_rechits_EE,Esum_rechits_AH);
      //loop over layers
      // for(int ilayer=1;ilayer<41;ilayer++)
      // 	{
      // 	  //cout<<rechits_layer[ilayer]<<endl;
      // 	  h_SEnergy_rechits_vs_layer->Fill(ilayer,rechits_layer[ilayer]);
      // 	  rechits_layer[ilayer]=0;
      // 	}
      if(DEBUG) cout<<"DEBUG: End of Entry = "<<jentry<<endl;
      if(DEBUG) cout<<"DEBUG: ****************** "<<endl;
      
      if(DEBUG && jentry > 50) return;
      //      gSystem->Exit(0);
      //if(jentry > 10000) break;
    
    } // loop over entries
  

  ///////////////////////////////////////////////////////////
  ///////  E N D     O F     E N T R Y     L O O P     //////
  ///////////////////////////////////////////////////////////
  //  gSystem->Exit(0);
  cout<<"Got Out "<<jentry<<endl;


}

